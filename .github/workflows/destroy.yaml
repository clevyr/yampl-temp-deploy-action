name: "Destroy Temp Environment"

on:
  workflow_call:
    inputs:
      temp-path:
        description: Path to temp environment directory
        required: true
        type: string
      commit-branch:
        description: Branch to commit to
        required: false
        type: string
        default: main
      repository:
        required: true
        type: string
      pr:
        required: true
        type: string
    secrets:
      repo-token:
        required: true

jobs:
  delete-temp:
    name: Destroy Temp Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          token: ${{ secrets.repo-token }}
      - name: "Check file existence"
        id: filecheck
        uses: andstor/file-existence-action@v2
        with:
          files: ${{ inputs.temp-path }}
      - name: Delete temp directory
        if: steps.filecheck.outputs.files_exists == 'true'
        run: rm -rf ${{ inputs.temp-path }}
        shell: bash
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ":coffin: Delete temp deployment for PR ${{ inputs.pr }}"
          branch: ${{ inputs.commit-branch }}
      # - name: Get Deployment ID
      #   id: get-deploy
      #   run: echo "deploy-id=$(gh api -X GET "/repos/:owner/:repo/deployments" | jq --arg environment "temp${{ inputs.pr }}" '.[] | select(.environment=="temp${{ inputs.pr }}") | .id' | head -n 1)" >> $GITHUB_OUTPUT
      #   shell: bash
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      # - name: Delete deployment
      #   if: ${{ steps.get-deploy.outputs.deploy-id }}
      #   uses: chrnorm/deployment-status@v2
      #   with:
      #     token: '${{ github.token }}'
      #     deployment-id: ${{ steps.get-deploy.outputs.deploy-id }}
      #     state: 'inactive'